input {
      file {
            path => "/opt/pmt/x*"
            start_position => "beginning"
            sincedb_path => "/dev/null"
      }
}

filter {
    csv {
       # columns => ["MeterSerial","StartDate","EndDate","Event_id","EventType","EcentClass_id","EventClass","AffectedPhase"]
         columns => ["MeterSerial", "StartDate", "EndDate", "Event_id", "EventType", "EcentClass_id", "EventClass", "AffectedPhase", "Customer_id_x", "Meterpoint_id", "Utility_id", "CustomerCode", "CustomerName", "AccountNumber", "Region", "AreaOffice", "latitude", "longitude", "Tariff", "Customer_id_y", "MeterPoint_id", "Meter_id", "MeterManufacturer", "MeterModel", "ConnectionType", "FullLoad", "CT_Primary", "CT_Secondary", "VT_Primary", "VT_Secondary", "MultiplicationFactor", "Disabled", "Suspended", "MaxDateRead", "CommissionDate", "CaptureDate", "InstallationDate", "Modem_id"]
        separator => ","
        }
    date {
        match => ["StartDate", "dd/MM/yyyy HH:mm:ss"]
        target => "Date"
         }
    date {
       match => ["MaxDateRead", "dd/MM/yyyy HH:mm:ss"]
       target => "MaxDateRead"
        }
    date {
       match => ["CommisionDate", "dd/MM/yyyy HH:mm:ss"]
       target => "CommisionDate"
        }
    date {
       match => ["InstallationDate", "dd/MM/yyyy HH:mm:ss"]
       target => "InstallationDate"
        }
    date {
       match => ["CaptureDate", "dd/MM/yyyy HH:mm:ss"]
       target => "CaptureDate"
        }


     mutate { convert => { "latitude" => "float" } }
     mutate { convert => { "longitude" => "float" } }
     mutate { rename => { "longitude" => "[location][lon]"
                          "latitude" => "[location][lat]" } }

     mutate {
       remove_field => [ "message", "host", "@timestamp", "@version" ]
           }
 }

output {
   stdout{
     codec => dots
#     codec => rubydebug
   }
   elasticsearch {
    hosts => ["172.24.4.119:9200", "10.40.1.118:9200"]
    index => "pmt_details"
    document_type => "pmt"
    user => "elastic"
    password => "xxxxx"
    }
}
